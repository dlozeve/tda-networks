
@book{hastie_elements_2009,
	title = {The Elements of Statistical Learning},
	volume = {1},
	isbn = {978-0-387-84857-0},
	url = {http://www.springerlink.com/index/10.1007/b94608},
	abstract = {During the past decade there has been an explosion in computation and information technology. With it has come vast amounts of data in a variety of fields such as medicine, biology, finance, and marketing. The challenge of understanding these data has led to the development of new tools in the field of statistics, and spawned new areas such as data mining, machine learning, and bioinformatics. Many of these tools have common underpinnings but are often expressed with different terminology. This book describes the important ideas in these areas in a common conceptual framework. While the approach is statistical, the emphasis is on concepts rather than mathematics. Many examples are given, with a liberal use of color graphics. It should be a valuable resource for statisticians and anyone interested in data mining in science or industry. The book's coverage is broad, from supervised learning (prediction) to unsupervised learning. The many topics include neural networks, support vector machines, classification trees and boosting-the first comprehensive treatment of this topic in any book. Trevor Hastie, Robert Tibshirani, and Jerome Friedman are professors of statistics at Stanford University. They are prominent researchers in this area: Hastie and Tibshirani developed generalized additive models and wrote a popular book of that title. Hastie wrote much of the statistical modeling software in S-{PLUS} and invented principal curves and surfaces. Tibshirani proposed the Lasso and is co-author of the very successful An Introduction to the Bootstrap. Friedman is the co-inventor of many data-mining tools including {CART}, {MARS}, and projection pursuit. {FROM} {THE} {REVIEWS}: {TECHNOMETRICS} "This is a vast and complex book. Generally, it concentrates on explaining why and how the methods work, rather than how to use them. Examples and especially the visualizations are principle features...As a source for the methods of statistical learning...it will probably be a long time before there is a competitor to this book."},
	pagetotal = {1–694},
	author = {Hastie, Trevor and Tibshirani, Robert and Friedman, Jerome},
	date = {2009},
	doi = {10.1007/b94608},
	pmid = {12377617},
	file = {Attachment:/home/dimitri/Zotero/storage/AVAIRYAL/Hastie, Tibshirani, Friedman - Unknown - Springer Series in Statistics The Elements of Statistical Learning The Elements of Statistical.pdf:application/pdf}
}

@incollection{karp_reducibility_2010,
	title = {Reducibility among combinatorial problems},
	isbn = {978-3-540-68274-5},
	url = {http://www.springerlink.com/index/10.1007/978-1-4684-2001-2_9%5Cnpapers3://publication/doi/10.1007/978-1-4684-2001-2_9},
	abstract = {A large class of computational problems involve the determination of properties of graphs, digraphs, integers, arrays of integers, finite families of finite sets, boolean formulas and elements of other countable domains. Through simple encodings from such domains into the set of words over a finite alphabet these problems can be converted into language recognition problems, and we can inquire into their computational complexity. It is reasonable to consider such a problem satisfactorily solved when an algorithm for its solution is found which terminates within a number of steps bounded by a polynomial in the length of the input. We show that a large number of classic unsolved problems of covering, matching, packing, routing, assignment and sequencing are equivalent, in the sense that either each of them possesses a polynomial-bounded algorithm or none of them does.},
	pages = {219--241},
	number = {Chapter 9},
	booktitle = {50 Years of Integer Programming 1958-2008: From the Early Years to the State-of-the-Art},
	author = {Karp, Richard M.},
	date = {2010},
	doi = {10.1007/978-3-540-68279-0_8},
	pmid = {15890271},
	file = {Attachment:/home/dimitri/Zotero/storage/4IAHTPB5/Karp - 1972 - Reducibility among Combinatorial Problems BT - (null).pdf:application/pdf}
}

@article{tomita_worst-case_2006,
	title = {The worst-case time complexity for generating all maximal cliques and computational experiments},
	volume = {363},
	issn = {0304-3975},
	url = {http://www.sciencedirect.com/science/article/pii/S0304397506003586},
	doi = {10.1016/j.tcs.2006.06.015},
	series = {Computing and Combinatorics},
	abstract = {We present a depth-first search algorithm for generating all maximal cliques of an undirected graph, in which pruning methods are employed as in the Bron–Kerbosch algorithm. All the maximal cliques generated are output in a tree-like form. Subsequently, we prove that its worst-case time complexity is O(3n/3) for an n-vertex graph. This is optimal as a function of n, since there exist up to 3n/3 maximal cliques in an n-vertex graph. The algorithm is also demonstrated to run very fast in practice by computational experiments.},
	pages = {28--42},
	number = {1},
	journaltitle = {Theoretical Computer Science},
	shortjournal = {Theoretical Computer Science},
	author = {Tomita, Etsuji and Tanaka, Akira and Takahashi, Haruhisa},
	urldate = {2018-07-31},
	date = {2006-10-25},
	keywords = {Computational experiments, Enumeration, Maximal cliques, Worst-case time complexity},
	file = {ScienceDirect Full Text PDF:/home/dimitri/Zotero/storage/QDLTAXHX/Tomita et al. - 2006 - The worst-case time complexity for generating all .pdf:application/pdf;ScienceDirect Snapshot:/home/dimitri/Zotero/storage/TCJ8J7MV/S0304397506003586.html:text/html}
}

@article{pedregosa_scikit-learn:_2011,
	title = {Scikit-learn: Machine Learning in Python},
	volume = {12},
	issn = {1533-7928},
	url = {http://jmlr.csail.mit.edu/papers/v12/pedregosa11a.html},
	shorttitle = {Scikit-learn},
	abstract = {Scikit-learn is a Python module integrating a wide range of state-of-the-art machine learning algorithms for medium-scale supervised and unsupervised problems. This package focuses on bringing machine learning to non-specialists using a general-purpose high-level language.  Emphasis is put on ease of use, performance, documentation, and {API} consistency.  It has minimal dependencies and is distributed under the simplified {BSD} license, encouraging its use in both academic and commercial settings.  Source code, binaries, and documentation can be downloaded from http://scikit-learn.sourceforge.net.},
	pages = {2825−2830},
	journaltitle = {Journal of Machine Learning Research},
	author = {Pedregosa, Fabian and Varoquaux, Gaël and Gramfort, Alexandre and Michel, Vincent and Thirion, Bertrand and Grisel, Olivier and Blondel, Mathieu and Prettenhofer, Peter and Weiss, Ron and Dubourg, Vincent and Vanderplas, Jake and Passos, Alexandre and Cournapeau, David and Brucher, Matthieu and Perrot, Matthieu and Duchesnay, Édouard},
	urldate = {2018-09-02},
	date = {2011-10},
	file = {Fulltext PDF:/home/dimitri/Zotero/storage/6SAE9PPD/Pedregosa et al. - 2011 - Scikit-learn Machine Learning in Python.pdf:application/pdf}
}

@misc{sejdinovic_advanced_2018,
	title = {Advanced Topics in Statistical Machine Learning},
	url = {http://www.stats.ox.ac.uk/%7Esejdinov/atsml/},
	author = {Sejdinovic, Dino},
	date = {2018-02-10}
}

@misc{golse_mat321_2015,
	title = {{MAT}321 Analyse réelle},
	publisher = {École polytechnique},
	author = {Golse, François and Laszlo, Yves and Pacard, Frank and Viterbo, Claude},
	date = {2015}
}